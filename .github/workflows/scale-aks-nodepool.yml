name: Scale AKS Node Pools

on:
  workflow_dispatch:
    inputs:
      scale_direction:
        description: 'Scale direction (down=0, up=n)'
        required: true
        default: 'down'
      node_count:
        description: 'Node count if scaling up'
        required: false
        default: '1'

env:
  RESOURCE_GROUP: dev
  CLUSTER_NAME: porc

jobs:
  scale-aks:
    runs-on: ubuntu-latest

    steps:
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get list of node pools
      id: nodepools
      run: |
        pools=$(az aks nodepool list           --resource-group "$RESOURCE_GROUP"           --cluster-name "$CLUSTER_NAME"           --query "[].name" -o tsv)
        echo "node_pools=$pools" >> $GITHUB_OUTPUT

    - name: Scale node pools safely
      run: |
        for pool in ${{ steps.nodepools.outputs.node_pools }}; do
          if [[ "${{ github.event.inputs.scale_direction }}" == "down" ]]; then
            echo "Checking autoscaler for pool: $pool"
            autoscaler=$(az aks nodepool show               --resource-group "$RESOURCE_GROUP"               --cluster-name "$CLUSTER_NAME"               --name "$pool"               --query "enableAutoScaling" -o tsv)

            if [[ "$autoscaler" == "true" ]]; then
              echo "Disabling autoscaler for $pool..."
              az aks nodepool update                 --resource-group "$RESOURCE_GROUP"                 --cluster-name "$CLUSTER_NAME"                 --name "$pool"                 --enable-cluster-autoscaler false
            fi

            echo "Scaling $pool to 0 nodes..."
            az aks nodepool scale               --resource-group "$RESOURCE_GROUP"               --cluster-name "$CLUSTER_NAME"               --name "$pool"               --node-count 0

          else
            echo "Scaling $pool to ${{ github.event.inputs.node_count }} nodes..."
            az aks nodepool scale               --resource-group "$RESOURCE_GROUP"               --cluster-name "$CLUSTER_NAME"               --name "$pool"               --node-count ${{ github.event.inputs.node_count }}
          fi
        done
